{"version":3,"sources":["components/navbar.jsx","components/counter.jsx","components/counters.jsx","App.js","reportWebVitals.js","index.js"],"names":["Navbar","totalCounters","console","log","className","href","Counter","state","value","props","counter","handleIncrement","setState","prevProps","prevSate","this","id","getBadgeClasses","formatCount","onClick","onIncrement","onDelete","classes","Component","Counters","onReset","counters","map","App","index","indexOf","handleDelete","counterId","filter","c","handleReset","Fragment","x","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"gQAqBeA,EAnBA,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,cAEb,OADAC,QAAQC,IAAI,kBAGR,qBAAKC,UAAU,+BAAf,SACI,oBAAGA,UAAU,eAAeC,KAAK,IAAjC,mBAEI,sBAAMD,UAAU,mCAAhB,SACKH,UCsDNK,E,4MA1CbC,MAAQ,CACNC,MAAO,EAAKC,MAAMC,QAAQF,O,EAG5BG,gBAAkB,WAChB,EAAKC,SAAS,CAAEJ,MAAO,EAAKD,MAAMC,MAAQ,K,wDAxB5C,SAAmBK,EAAUC,GAE5BZ,QAAQC,IAAI,YAAYU,GACxBX,QAAQC,IAAI,WAAWW,GACpBD,EAAUH,QAAQF,MAAUO,KAAKN,MAAMC,QAAQF,Q,+BAKnD,c,kCAGA,WAKEN,QAAQC,IAAI,qB,oBAUd,WAAU,IAAD,OAEP,OADAD,QAAQC,IAAI,mBAEV,gCACE,mCAAMY,KAAKN,MAAMO,MACjB,sBAAMZ,UAAWW,KAAKE,kBAAtB,SAA0CF,KAAKG,gBAC/C,wBAEAC,QAAW,kBAAK,EAAKV,MAAMW,YAAY,EAAKX,MAAMC,UAChDN,UAAU,2BAHZ,uBAOA,wBACEe,QAAS,kBAAM,EAAKV,MAAMY,SAAS,EAAKZ,MAAMC,QAAQM,KACtDZ,UAAU,4BAFZ,yB,6BAUN,WACE,IAAIkB,EAAU,mBAEd,OADAA,GAAwC,IAA7BP,KAAKN,MAAMC,QAAQF,MAAc,UAAY,Y,yBAG1D,WACE,IAAQA,EAAUO,KAAKN,MAAMC,QAArBF,MACR,OAAiB,IAAVA,EAAc,OAASA,M,GA1DZe,aC2BPC,E,4JAxBb,WACEtB,QAAQC,IAAI,oBACZ,MAAmDY,KAAKN,MAAjDgB,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,SAAUL,EAA1B,EAA0BA,SAAUD,EAApC,EAAoCA,YACpC,OACE,gCACE,wBACED,QAASM,EACTrB,UAAU,6BAFZ,mBAMCsB,EAASC,KAAI,SAACjB,GAAD,OACZ,cAAC,EAAD,CAEEW,SAAUA,EACVD,YAAeA,EACfV,QAASA,GAHJA,EAAQM,c,GAfFO,aC2DRK,E,kDAhDZ,aAAc,IAAD,8BACX,gBATHrB,MAAQ,CACNmB,SAAU,CACR,CAAEV,GAAI,EAAGR,MAAO,GAChB,CAAEQ,GAAI,EAAGR,MAAO,GAChB,CAAEQ,GAAI,EAAGR,MAAO,GAChB,CAAEQ,GAAI,EAAGR,MAAO,KAGN,EAUdG,gBAAkB,SAAAD,GAChB,IAAMgB,EAAQ,YAAO,EAAKnB,MAAMmB,UAC1BG,EAAQH,EAASI,QAAQpB,GAC/BgB,EAASG,GAAOrB,QAChB,EAAKI,SAAS,CAAEc,cAdJ,EAiBdK,aAAe,SAACC,GACd,IAAMN,EAAW,EAAKnB,MAAMmB,SAASO,QAAO,SAACC,GAAD,OAAOA,EAAElB,KAAOgB,KAC5D,EAAKpB,SAAS,CAAEc,cAnBJ,EAsBdS,YAAc,WACZ,IAAMT,EAAW,EAAKnB,MAAMmB,SAASC,KAAI,SAACO,GAExC,OADAA,EAAE1B,MAAQ,EACH0B,KAET,EAAKtB,SAAS,CAAEc,cAzBfxB,QAAQC,IAAI,mBAFD,E,qDAMb,WAEED,QAAQC,IAAI,iB,oBAsBf,WAEE,OADAD,QAAQC,IAAI,cAEV,eAAC,IAAMiC,SAAP,WACA,cAAC,EAAD,CAASnC,cAAec,KAAKR,MAAMmB,SAASO,QAAO,SAAAI,GAAC,OAAEA,EAAE7B,MAAQ,KAAG8B,SACnE,sBAAMlC,UAAU,YAAhB,SACI,cAAC,EAAD,CACAsB,SAAUX,KAAKR,MAAMmB,SACrBD,QAASV,KAAKoB,YACdf,YAAaL,KAAKJ,gBAClBU,SAAUN,KAAKgB,wB,GAjDPR,aCOHgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCCdQ,IAASC,OACT,cAAC,EAAD,IACEC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.22e2300a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nconst Navbar = ({totalCounters}) =>{\r\n    console.log(\"Navbar-renderd\");\r\n    return ( \r\n          \r\n        <nav className=\"navbar navbar-light bg-light\">\r\n            <a className=\"navbar-brand\" href=\"#\">\r\n                Navbar \r\n                <span className=\"badge bagge-pill badge-secondary\">\r\n                    {totalCounters}\r\n                </span>\r\n \r\n            </a>\r\n        </nav>\r\n    \r\n );\r\n}\r\n\r\n\r\n \r\nexport default Navbar;","import React, { Component } from \"react\";\r\n\r\nclass Counter extends Component {\r\n  componentDidUpdate(prevProps,prevSate){\r\n   //call ajax\r\n   console.log('prevProps',prevProps);\r\n   console.log('prevSate',prevSate);\r\n   if(prevProps.counter.value !== this.props.counter.value)\r\n   {\r\n     //ajax call and get new data from the server\r\n   }\r\n  }\r\n  componentDidMount(){\r\n\r\n  }\r\n  componentWillUnmount(){\r\n    //trước khi xoá thành phần khỏi DOM\r\n    //thực hiện dọn dẹp trc khi xoá\r\n    //timer\r\n    //listion\r\n    console.log('Counter-unmount');\r\n  }\r\n  state = {\r\n    value: this.props.counter.value,\r\n  };\r\n\r\n  handleIncrement = () => {\r\n    this.setState({ value: this.state.value + 1 });\r\n  };\r\n\r\n  render() {\r\n    console.log(\"counter-renderd\");\r\n    return (\r\n      <div>\r\n        <h4> {this.props.id}</h4>\r\n        <span className={this.getBadgeClasses()}>{this.formatCount()}</span>\r\n        <button\r\n        //  onClick={this.handleIncrement}\r\n        onClick = {() =>this.props.onIncrement(this.props.counter)}\r\n          className=\"btn btn-secondary btn-sm\"\r\n        >\r\n          Increment\r\n        </button>\r\n        <button\r\n          onClick={() => this.props.onDelete(this.props.counter.id)}\r\n          className=\"btn btn-danger btn-sm m-2\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getBadgeClasses() {\r\n    let classes = \"badge m-2 badge-\";\r\n    classes += this.props.counter.value === 0 ? \"warning\" : \"primary\";\r\n    return classes;\r\n  }\r\n  formatCount() {\r\n    const { value } = this.props.counter;\r\n    return value === 0 ? \"Zero\" : value;\r\n  }\r\n}\r\n\r\nexport default Counter;\r\n","import React, { Component } from \"react\";\r\nimport Counter from \"./counter\";\r\n\r\nclass Counters extends Component {\r\n  \r\n  render() {\r\n    console.log(\"counters-renderd\");\r\n    const {onReset, counters, onDelete, onIncrement} = this.props;\r\n    return (\r\n      <div>\r\n        <button\r\n          onClick={onReset} \r\n          className=\"btn btn-primary btn-sm m-2\"\r\n        >\r\n          Reset\r\n        </button>\r\n        {counters.map((counter) => (\r\n          <Counter\r\n            key={counter.id}\r\n            onDelete={onDelete}\r\n            onIncrement = {onIncrement}\r\n            counter={counter}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Counters;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/navbar.jsx';\r\nimport Counter from './components/counters.jsx';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    counters: [\r\n      { id: 1, value: 4 },\r\n      { id: 2, value: 0 },\r\n      { id: 3, value: 0 },\r\n      { id: 4, value: 0 },\r\n    ],\r\n  }; \r\n   constructor(){\r\n     super();\r\n     console.log('App-Constructor');\r\n\r\n   }\r\n   \r\n   componentDidMount(){\r\n     //Ajax call\r\n     console.log('App-Mounted');\r\n   }\r\n  handleIncrement = counter =>{\r\n    const counters = [...this.state.counters];\r\n    const index = counters.indexOf(counter);\r\n    counters[index].value++;\r\n    this.setState({ counters });\r\n  }\r\n\r\n  handleDelete = (counterId) => {\r\n    const counters = this.state.counters.filter((c) => c.id !== counterId);\r\n    this.setState({ counters });\r\n  };\r\n\r\n  handleReset = () => {\r\n    const counters = this.state.counters.map((c) => {\r\n      c.value = 0;\r\n      return c;\r\n    });\r\n    this.setState({ counters });\r\n  };  \r\n\r\n  render() { \r\n    console.log('App-Render');\r\n    return ( \r\n      <React.Fragment>\r\n      <Navbar  totalCounters={this.state.counters.filter(x=>x.value > 0).length}/>\r\n      <main className=\"Container\">\r\n          <Counter \r\n          counters={this.state.counters}\r\n          onReset={this.handleReset} \r\n          onIncrement={this.handleIncrement}\r\n          onDelete={this.handleDelete}/>\r\n      </main>\r\n      </React.Fragment>\r\n     );\r\n  }\r\n}\r\n \r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\n\r\n\r\nReactDOM.render(\r\n<App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}